- name: Install and configure Apache
  hosts: webservers
  become: true

  tasks:
    - name: Install Apache2
      apt:
        name: apache2
        state: present

    - name: Start Apache2
      service:
        name: apache2
        state: started

    - name: Enable Apache2
      service:
        name: apache2
        enabled: true

    - name: Deploy App
      copy:
        content: "<html><head><title>Hello World</title></head><body><h1>Hello World!</h1></body></html>
        dest: /var/www/html/index.html
    - name: Install SSL
      apt:
        name: openssl
        state: present
    - name: Generate SSL Cert
      command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache.key -out /etc/ssl/certs/apache.crt -subj "/C=test/ST=test/L=test/O=test/OU=test/CN=test.local"

    - name: Configure SSL on Apache2
      copy:
        src: apache_ssl.conf
        dest: /etc/apache2/conf-available/
      notify: Reload Apache2

    - name: Enable Apache2 SSL configuration
      command: a2enconf apache_ssl

    - name: Redirect HTTP to HTTPS
      copy:
        src: apache_redirect.conf
        dest: /etc/apache2/conf-available/
      notify: Reload Apache

    - name: Enable Apache2 redirection
      command: a2enconf apache_redirect

  handlers:
    - name: Reload Apache2
      service:
        name: apache2
        state: reloaded

- name: Run Test test scripts
  hosts: webservers
  gather_facts: false
  vars:
    test_url: "https://localhost"
    expected_status_code: "200"
  tasks:
    - name: Testing Application
      uri:
        url: "{{ test_url }}"
        method: GET
        return_content: yes
        status_code: "{{ expected_status_code }}"
      register: test_result

    - name: Assert if web server is running
      assert:
        that:
          - test_result.status == expected_status_code